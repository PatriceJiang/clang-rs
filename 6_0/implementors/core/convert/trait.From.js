(function() {var implementors = {};
implementors["clang"] = [{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"clang/completion/struct.CompletionContext.html\" title=\"struct clang::completion::CompletionContext\">CompletionContext</a>",synthetic:false,types:["clang::completion::CompletionContext"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"clang/completion/struct.CompletionContext.html\" title=\"struct clang::completion::CompletionContext\">CompletionContext</a>&gt; for <a class=\"type\" href=\"clang_sys/type.CXCompletionContext.html\" title=\"type clang_sys::CXCompletionContext\">CXCompletionContext</a>",synthetic:false,types:["clang_sys::CXCompletionContext"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"clang/enum.AlignofError.html\" title=\"enum clang::AlignofError\">AlignofError</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>",synthetic:false,types:["alloc::string::String"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"clang/enum.OffsetofError.html\" title=\"enum clang::OffsetofError\">OffsetofError</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>",synthetic:false,types:["alloc::string::String"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"clang/enum.SaveError.html\" title=\"enum clang::SaveError\">SaveError</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>",synthetic:false,types:["alloc::string::String"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"clang/enum.SizeofError.html\" title=\"enum clang::SizeofError\">SizeofError</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>",synthetic:false,types:["alloc::string::String"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"clang/enum.SourceError.html\" title=\"enum clang::SourceError\">SourceError</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>",synthetic:false,types:["alloc::string::String"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"clang/struct.ObjCAttributes.html\" title=\"struct clang::ObjCAttributes\">ObjCAttributes</a>",synthetic:false,types:["clang::objcattributes::ObjCAttributes"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"clang/struct.ObjCAttributes.html\" title=\"struct clang::ObjCAttributes\">ObjCAttributes</a>&gt; for <a class=\"type\" href=\"clang_sys/type.CXObjCPropertyAttrKind.html\" title=\"type clang_sys::CXObjCPropertyAttrKind\">CXObjCPropertyAttrKind</a>",synthetic:false,types:["clang_sys::CXObjCPropertyAttrKind"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"clang/struct.ObjCQualifiers.html\" title=\"struct clang::ObjCQualifiers\">ObjCQualifiers</a>",synthetic:false,types:["clang::ObjCQualifiers"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"clang/struct.ObjCQualifiers.html\" title=\"struct clang::ObjCQualifiers\">ObjCQualifiers</a>&gt; for <a class=\"type\" href=\"clang_sys/type.CXObjCDeclQualifierKind.html\" title=\"type clang_sys::CXObjCDeclQualifierKind\">CXObjCDeclQualifierKind</a>",synthetic:false,types:["clang_sys::CXObjCDeclQualifierKind"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"clang/struct.ThreadOptions.html\" title=\"struct clang::ThreadOptions\">ThreadOptions</a>",synthetic:false,types:["clang::ThreadOptions"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"clang/struct.ThreadOptions.html\" title=\"struct clang::ThreadOptions\">ThreadOptions</a>&gt; for <a class=\"type\" href=\"clang_sys/type.CXGlobalOptFlags.html\" title=\"type clang_sys::CXGlobalOptFlags\">CXGlobalOptFlags</a>",synthetic:false,types:["clang_sys::CXGlobalOptFlags"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
